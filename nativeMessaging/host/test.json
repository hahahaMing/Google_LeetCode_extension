{"text":"data","title":"9999. 二叉搜索树节点最小距离","qContent":"<p>给你一个二叉搜索树的根节点 <code>root</code> ，返回 <strong>树中任意两不同节点值之间的最小差值</strong> 。</p>\n\n<p><strong>注意：</strong>本题与 530：<a href=\"https://leetcode-cn.com/problems/minimum-absolute-difference-in-bst/\">https://leetcode-cn.com/problems/minimum-absolute-difference-in-bst/</a> 相同</p>\n\n<p>&nbsp;</p>\n\n<div class=\"original__bRMd\">\n<div>\n<p><strong>示例 1：</strong></p>\n<img style=\"width: 292px; height: 301px;\" src=\"https://assets.leetcode.com/uploads/2021/02/05/bst1.jpg\" alt=\"\">\n<pre><strong>输入：</strong>root = [4,2,6,1,3]\n<strong>输出：</strong>1\n</pre>\n\n<p><strong>示例 2：</strong></p>\n<img style=\"width: 282px; height: 301px;\" src=\"https://assets.leetcode.com/uploads/2021/02/05/bst2.jpg\" alt=\"\">\n<pre><strong>输入：</strong>root = [1,0,48,null,null,12,49]\n<strong>输出：</strong>1\n</pre>\n\n<p>&nbsp;</p>\n\n<p><strong>提示：</strong></p>\n\n<ul>\n\t<li>树中节点数目在范围 <code>[2, 100]</code> 内</li>\n\t<li><code>0 &lt;= Node.val &lt;= 10<sup>5</sup></code></li>\n</ul>\n</div>\n</div>\n","codeText":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\n    int rst;\n    pair<int,int> mid(TreeNode* root){\n        int l = root->val, r = root->val;\n        if(root->left!=nullptr){\n            auto pl = mid(root->left);\n            rst = min(rst,root->val-pl.second);\n            l = pl.first;\n        }\n        if(root->right!=nullptr){\n            auto pr = mid(root->right);\n            rst = min(rst,pr.first-root->val);\n            r = pr.second;\n        }\n        cout<<l<<r<<endl;\n        return {l,r};\n    }\npublic:\n    int minDiffInBST(TreeNode* root) {\n        rst = 100000;"}